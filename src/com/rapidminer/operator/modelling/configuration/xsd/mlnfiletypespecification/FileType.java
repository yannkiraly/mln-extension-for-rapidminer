//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.11.19 at 05:11:47 PM CET 
//


package com.rapidminer.operator.modelling.configuration.xsd.mlnfiletypespecification;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for fileType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="fileType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="key" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="converter" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="queryAtomFileType" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="nonEvidenceAtomFileType" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="supportsLEConstraintConversion" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="supportsUnsupportedConstraintRemoval" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "fileType")
public class FileType {

    @XmlAttribute(name = "key", required = true)
    protected String key;
    @XmlAttribute(name = "converter", required = true)
    protected String converter;
    @XmlAttribute(name = "queryAtomFileType")
    protected Boolean queryAtomFileType;
    @XmlAttribute(name = "nonEvidenceAtomFileType")
    protected Boolean nonEvidenceAtomFileType;
    @XmlAttribute(name = "supportsLEConstraintConversion")
    protected Boolean supportsLEConstraintConversion;
    @XmlAttribute(name = "supportsUnsupportedConstraintRemoval")
    protected Boolean supportsUnsupportedConstraintRemoval;

    /**
     * Gets the value of the key property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getKey() {
        return key;
    }

    /**
     * Sets the value of the key property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setKey(String value) {
        this.key = value;
    }

    /**
     * Gets the value of the converter property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getConverter() {
        return converter;
    }

    /**
     * Sets the value of the converter property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConverter(String value) {
        this.converter = value;
    }

    /**
     * Gets the value of the queryAtomFileType property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isQueryAtomFileType() {
        if (queryAtomFileType == null) {
            return false;
        } else {
            return queryAtomFileType;
        }
    }

    /**
     * Sets the value of the queryAtomFileType property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setQueryAtomFileType(Boolean value) {
        this.queryAtomFileType = value;
    }

    /**
     * Gets the value of the nonEvidenceAtomFileType property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isNonEvidenceAtomFileType() {
        if (nonEvidenceAtomFileType == null) {
            return false;
        } else {
            return nonEvidenceAtomFileType;
        }
    }

    /**
     * Sets the value of the nonEvidenceAtomFileType property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setNonEvidenceAtomFileType(Boolean value) {
        this.nonEvidenceAtomFileType = value;
    }

    /**
     * Gets the value of the supportsLEConstraintConversion property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isSupportsLEConstraintConversion() {
        if (supportsLEConstraintConversion == null) {
            return false;
        } else {
            return supportsLEConstraintConversion;
        }
    }

    /**
     * Sets the value of the supportsLEConstraintConversion property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSupportsLEConstraintConversion(Boolean value) {
        this.supportsLEConstraintConversion = value;
    }

    /**
     * Gets the value of the supportsUnsupportedConstraintRemoval property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isSupportsUnsupportedConstraintRemoval() {
        if (supportsUnsupportedConstraintRemoval == null) {
            return false;
        } else {
            return supportsUnsupportedConstraintRemoval;
        }
    }

    /**
     * Sets the value of the supportsUnsupportedConstraintRemoval property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSupportsUnsupportedConstraintRemoval(Boolean value) {
        this.supportsUnsupportedConstraintRemoval = value;
    }

}
